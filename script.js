let cart = [];
let currentProduct = null;
let currentSlideIndex = 0;
let currentSliderImages = [];

// === –ü—Ä–∏–≤—è–∑–∫–∞ Firestore ===

import { filterProducts } from './admin.js'; // –∏–ª–∏ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω

const firebaseConfig = {
  apiKey: "AIzaSyA2TAQM23nj7VOiHPv8HgDuXdWV_OVjX7A",
  authDomain: "minibeasts-3d.firebaseapp.com",
  projectId: "minibeasts-3d",
  storageBucket: "minibeasts-3d.firebasestorage.app",
  messagingSenderId: "192684036080",
  appId: "1:192684036080:web:c306f5de3f62ef87199735",
  measurementId: "G-MHG9HCXRCB"
};

window.Telegram = {
  WebApp: {
    sendData: (data) => console.log("üì§ –ï–º—É–ª—è—Ü—ñ—è sendData:", data),
    close: () => console.log("üõë –ï–º—É–ª—è—Ü—ñ—è –∑–∞–∫—Ä–∏—Ç—Ç—è WebApp"),
    expand: () => console.log("üîç –ï–º—É–ª—è—Ü—ñ—è expand()")
  }
};

const tg = window.Telegram.WebApp;
console.log("üì° Telegram WebApp API:", tg);



// == üîß –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏ == //
export function showAddProductForm() {
  const container = document.getElementById("adminContent");
  container.innerHTML = generateAddProductForm();

  // ‚è≥ –ñ–¥—ë–º, –ø–æ–∫–∞ DOM —Ç–æ—á–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—Å—è
  const trySetup = () => {
    const form = document.getElementById("productForm");
    if (form) {
      setupProductFormHandler();
    } else {
      // üîÅ –ü—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 50–º—Å, –º–∞–∫—Å–∏–º—É–º 10 —Ä–∞–∑
      if (trySetup.attempts < 10) {
        trySetup.attempts++;
        setTimeout(trySetup, 50);
      } else {
        console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ñ–æ—Ä–º—É –ø—ñ—Å–ª—è –≤—Å—Ç–∞–≤–∫–∏.");
      }
    }
  };
  trySetup.attempts = 0;
  trySetup();
}

export function showProductList() {
  document.getElementById("adminContent").innerHTML = "<p>üì¶ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤...</p>";
}

export function showOrderList() {
  document.getElementById("adminContent").innerHTML = "<p>üì® –°–ø–∏—Å–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å...</p>";
}




function calculatePrice() {
  const plasticType = parseInt(document.getElementById("plasticSelect").value);
  const size = parseInt(document.getElementById("sizeSelect").value);
  let price = currentProduct.basePrice;

  if (plasticType === 2) price *= 1.05;
  if (plasticType === 3) price *= 1.15;

  if (size > 80) price *= 1.6667;
  if (size > 100) price *= 1.8;

  price = Math.round(price);
  document.getElementById("finalPrice").innerText = `–û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∞ —Ü—ñ–Ω–∞: ${price} –≥—Ä–Ω`;

  const confirmButton = document.getElementById("confirmButton");
  confirmButton.style.display = "inline-block";

  // ‚úÖ –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤ –∫–æ—Ä–∑–∏–Ω—É
  confirmButton.onclick = confirmCustomization;
}



function openCategory(category) {
  const ready = document.getElementById("ready-products");
  const custom = document.getElementById("custom-order");

  if (category === "ready") {
    ready.classList.add("visible");
    ready.classList.remove("hidden");
    custom.classList.add("hidden");
    custom.classList.remove("visible");
  } else {
    custom.classList.add("visible");
    custom.classList.remove("hidden");
    ready.classList.add("hidden");
    ready.classList.remove("visible");
  }
}



window.filterByType = function (tag) {
  const cards = document.querySelectorAll("#productGrid .product-card");

  cards.forEach(card => {
    const tags = card.querySelector(".tags")?.textContent || "";
    card.style.display = (tag === "all" || tags.includes(tag)) ? "block" : "none";
  });
};



// === ‚¨ÖÔ∏è‚û°Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤ ===
window.nextSlide = function(button) {
  const slider = button.parentElement;
  const slides = slider.querySelectorAll('.slide');
  let currentIndex = Array.from(slides).findIndex(slide => slide.classList.contains('active'));

  slides.forEach(slide => slide.classList.remove('active'));
  const nextIndex = (currentIndex + 1) % slides.length;
  slides[nextIndex].classList.add('active');
};

window.prevSlide = function(button) {
  const slider = button.parentElement;
  const slides = slider.querySelectorAll('.slide');
  let currentIndex = Array.from(slides).findIndex(slide => slide.classList.contains('active'));

  slides.forEach(slide => slide.classList.remove('active'));
  const prevIndex = (currentIndex - 1 + slides.length) % slides.length;
  slides[prevIndex].classList.add('active');
};

// === üñºÔ∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ ===
window.openModal = function(src) {
  const modal = document.getElementById("imageModal");
  const modalImg = document.getElementById("modalImage");
  modalImg.src = src;
  modal.style.display = "flex";

  // –ù–∞–π—Ç–∏ —Ç–µ–∫—É—â–∏–π —Å–ª–∞–π–¥–µ—Ä –∏ –≤—Å–µ –µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const allSliders = document.querySelectorAll(".slider");
  for (const slider of allSliders) {
    const slides = slider.querySelectorAll(".slide");
    const index = Array.from(slides).findIndex(img => img.src === src);
    if (index !== -1) {
      currentSliderImages = Array.from(slides);
      currentSlideIndex = index;
      break;
    }
  }
};

window.showNextModalImage = function() {
  if (!currentSliderImages.length) return;
  currentSlideIndex = (currentSlideIndex + 1) % currentSliderImages.length;
  document.getElementById("modalImage").src = currentSliderImages[currentSlideIndex].src;
};

window.showPrevModalImage = function() {
  if (!currentSliderImages.length) return;
  currentSlideIndex = (currentSlideIndex - 1 + currentSliderImages.length) % currentSliderImages.length;
  document.getElementById("modalImage").src = currentSliderImages[currentSlideIndex].src;
};

// === ‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ ===
window.closeImageModal = function() {
  document.getElementById("imageModal").style.display = "none";
};


function addToCart(name, price) {
  cart.push({ name, price });
  updateCart(); // –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ
  alert(`${name} –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!`);
}



function updateCart() {
  const cartList = document.getElementById("cartItems");
  const cartTotal = document.getElementById("cartTotal");
  cartList.innerHTML = "";
  let total = 0;

  cart.forEach((item, index) => {
    const li = document.createElement("li");
    li.className = "cart-item";

    // üñºÔ∏è –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const img = document.createElement("img");
    img.src = item.image || "img/default.jpg";
    img.className = "cart-preview";
    img.alt = item.name;

   // üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    const title = document.createElement("strong");
    title.innerText = item.name;


    // ‚öôÔ∏è –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    const details = document.createElement("div");
    details.className = "cart-details";
    details.innerText = `üìè ${item.size}–º–º, üé® –ø–ª–∞—Å—Ç–∏–∫ ${item.plastic}-–∫–æ–ª—å–æ—Ä–æ–≤–∏–π${item.comment ? `, üí¨ ${item.comment}` : ""}`;

    // üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
    const qty = document.createElement("input");
qty.type = "number";
qty.min = "1";
qty.value = item.quantity;
qty.className = "cart-qty-input";
qty.addEventListener("change", () => {
  const newQty = parseInt(qty.value);
  if (newQty < 1 || isNaN(newQty)) {
    showToast("‚ùå –ú—ñ–Ω—ñ–º—É–º 1 —à—Ç!");
    qty.value = item.quantity;
    return;
  }
  cart[index].quantity = newQty;
  updateCart(); // –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Å—ë
});


    // üí∞ –¶–µ–Ω–∞
    const price = document.createElement("span");
    price.className = "cart-price";
    price.innerText = `${item.price * item.quantity} –≥—Ä–Ω`;

    // üóë –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    const delBtn = document.createElement("button");
    delBtn.className = "cart-delete";
    delBtn.innerText = "üóë –í–∏–¥–∞–ª–∏—Ç–∏";
    delBtn.onclick = () => deleteFromCart(index);

    // üì¶ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–ø—Ä–∞–≤–∞ –æ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const content = document.createElement("div");
    content.className = "cart-content";
    content.appendChild(title);
    content.appendChild(details);
    content.appendChild(qty);
    content.appendChild(price);
    content.appendChild(delBtn);

    // üì¶ –°–æ–±–∏—Ä–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    li.appendChild(img);     // –ø—Ä–µ–≤—å—é —Å–ª–µ–≤–∞
    li.appendChild(content); // —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∞
    cartList.appendChild(li);

    total += item.price * item.quantity;
  });

  cartTotal.textContent = `–°—É–º–∞: ${total} –≥—Ä–Ω`;
}


function deleteFromCart(index) {
  cart.splice(index, 1);
  updateCart();
  showToast("üóë –¢–æ–≤–∞—Ä –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∫–æ—Ä–∑–∏–Ω–∏");
}


function showToast(message) {
  const toast = document.createElement("div");
  toast.className = "toast";
  toast.innerText = message;
  document.body.appendChild(toast);

  setTimeout(() => {
    toast.classList.add("visible");
  }, 10);

  setTimeout(() => {
    toast.classList.remove("visible");
    setTimeout(() => toast.remove(), 300);
  }, 3000);
}
function clearCart() {
  cart = [];
  updateCart();
  showToast("üóë –ö–æ—Ä–∑–∏–Ω—É –æ—á–∏—â–µ–Ω–æ");
}

function openCustomizationModal(button) {
  const card = button.closest('.product-card');
  const name = card.querySelector('h3')?.innerText || "–ë–µ–∑ –Ω–∞–∑–≤–∏";
  const image = card.querySelector("img")?.src || "img/default.jpg";

  const config = card.querySelector('.config');
  const get = (cls) => parseFloat(config.querySelector(`.${cls}`)?.innerText || "1");

  const basePrice = get("base");

  currentProduct = {
    name,
    basePrice,
    image,
    sizeFactors: {
      80: get("size80"),
      100: get("size100"),
      120: get("size120")
    },
    plasticFactors: {
      1: get("plastic1"),
      2: get("plastic2"),
      3: get("plastic3")
    }
  };

  document.getElementById("modalTitle").innerText = name;
  document.getElementById("customComment").value = "";
  document.getElementById("sizeSelect").value = "100";
  document.getElementById("plasticSelect").value = "1";

  calculatePrice();
  document.getElementById("customModal").style.display = "flex";
}


function confirmCustomization() {
  calculatePrice(); // –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å

  const size = document.getElementById("sizeSelect").value;
  const plastic = document.getElementById("plasticSelect").value;
  const comment = document.getElementById("customComment").value;
  const finalPriceText = document.getElementById("finalPrice").innerText;
  const finalPrice = parseInt(finalPriceText.replace(/\D/g, '')) || currentProduct.basePrice;

  const quantity = 1; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1
  const image = currentProduct.image || "img/default.jpg"; // –ø—Ä–µ–≤—å—é —Ç–æ–≤–∞—Ä–∞

  cart.push({
    name: currentProduct.name,
    size,
    plastic,
    comment,
    quantity,
    price: finalPrice,
    image
  });

  updateCart(); // üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ
  showToast("‚úÖ –î–æ–¥–∞–Ω–æ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏"); // üîî –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  closeModal(); // ‚ùå –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ

  // üëá –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–æ—Ä–∑–∏–Ω–µ
  document.getElementById("cart").scrollIntoView({ behavior: "smooth" });
}


function closeModal() {
  document.getElementById("customModal").style.display = "none";
}
// == üîß –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π ==
window.openCategory = function (category) {
  const ready = document.getElementById("ready-products");
  const custom = document.getElementById("custom-order");

  if (category === "ready") {
    ready.classList.add("visible");
    ready.classList.remove("hidden");
    custom.classList.add("hidden");
    custom.classList.remove("visible");
  } else {
    custom.classList.add("visible");
    custom.classList.remove("hidden");
    ready.classList.add("hidden");
    ready.classList.remove("visible");
  }
};

document.addEventListener("DOMContentLoaded", () => {
  // üîç –ù–∞–≤—ñ—à—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä–∞ –ø–æ —Ç–µ–≥–∞–º
  const input = document.getElementById("searchInput");

  const tryAttachFilter = () => {
    if (input && typeof window.filterProducts === "function") {
      input.addEventListener("input", window.filterProducts);
      console.log("‚úÖ –§—ñ–ª—å—Ç—Ä –Ω–∞–≤—ñ—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ.");
    } else {
      console.warn("‚ö†Ô∏è filterProducts —â–µ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∞. –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ —á–µ—Ä–µ–∑ 200–º—Å...");
      setTimeout(tryAttachFilter, 200);
    }
  };
  tryAttachFilter();

  // üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π: ready / custom
  const customOrderSection = document.getElementById("custom-order");
  const btnReady = document.getElementById("btnReady");
  const btnCustom = document.getElementById("btnCustom");

if (btnReady) {
  btnReady.addEventListener("click", () => openCategory("ready"));
}

if (btnCustom) {
  btnCustom.addEventListener("click", () => openCategory("custom"));
}


  // üß≤ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –∑ Firestore
  const grid = document.getElementById("productGrid");
  if (!grid) {
    console.warn("‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #productGrid –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.");
    return;
  }

firebase.firestore().collection("products").orderBy("timestamp", "desc").get()
  .then(snapshot => {
    snapshot.forEach(doc => {
      const data = doc.data();

      const cardHTML = `
        <div class="product-card">
          <div class="slider">
            ${data.images.map((src, i) => `
              <img src="${src}" class="slide${i === 0 ? ' active' : ''}" onclick="openModal(this.src)">
            `).join("")}
            <button class="prev" onclick="prevSlide(this)">‚Üê</button>
            <button class="next" onclick="nextSlide(this)">‚Üí</button>
          </div>

          <h3>${data.name}</h3>
          <p>${data.description}</p>
          <p><strong>–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:</strong> ${data.feature}</p>
          <p><strong>–¶—ñ–Ω–∞:</strong> ${data.basePrice} –≥—Ä–Ω</p>
          <button onclick="openCustomizationModal(this)">üìä –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å</button>
        </div>
      `;

      const isCustom = !!data.size80 || !!data.plastic1 || !!data.manualPrices;
      const containerId = isCustom ? "custom-order" : "ready-products";
      const container = document.getElementById(containerId);
      if (container) {
        container.insertAdjacentHTML("beforeend", cardHTML);
      }
    });
  })
  .catch(err => {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤:", err.message);
  });




// === –†–∞—Å—á—ë—Ç —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ ===
function calculateTotal(cart) {
  return cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
}

// === –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ===
function confirmOrder() {
  const tg = window.Telegram?.WebApp || {
      sendData: (data) => console.log("üì§ –ï–º—É–ª—è—Ü—ñ—è sendData:", data),
    close: () => console.log("üõë –ï–º—É–ª—è—Ü—ñ—è –∑–∞–∫—Ä–∏—Ç—Ç—è WebApp")
  };

console.log("üìã –ó–Ω–∞—á–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏:", {
  fullName: document.getElementById("nameInput").value,
  phone: document.getElementById("phoneInput").value,
  city: document.getElementById("cityInput").value,
  branch: document.getElementById("branchInput").value
});


  // üßæ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–±–æ—Ä–∫–∞ Telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const rawUser = Telegram.WebApp.initDataUnsafe?.user || {};
  const telegramUser = {
    id: rawUser.id || null,
    username: rawUser.username || "",
    first_name: rawUser.first_name || "",
    last_name: rawUser.last_name || "",
    language_code: rawUser.language_code || ""
  };

const orderData = {
  contact: {
    name: document.getElementById("nameInput").value.trim(),
    phone: document.getElementById("phoneInput").value.trim()
  },
  delivery: {
    city: document.getElementById("cityInput").value.trim(),
    service: document.getElementById("deliveryService").value,
    branch: document.getElementById("branchInput").value.trim()
  },
  order: cart.map(item => ({
    name: item.name,
    size: item.size,
    plastic: item.plastic,
    quantity: item.quantity,
    price: item.price,
    comment: item.comment || ""
  })),
  telegramUser,
  paymentMethod: document.querySelector('input[name="paymentMethod"]:checked')?.value || "card",
  total: calculateTotal(cart),
  timestamp: new Date().toISOString(),
  status: "pending"
};



  // ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
  if (
    !orderData.customer.fullName ||
    !orderData.customer.phone ||
    !orderData.delivery.city ||
    !orderData.delivery.branch
  ) {
    showToast("‚ö†Ô∏è –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è");
    return;
  }

  // üßº –£–¥–∞–ª–µ–Ω–∏–µ undefined/null-–ø–æ–ª–µ–π –∏–∑ telegramUser
  Object.keys(orderData.telegramUser).forEach(key => {
    if (orderData.telegramUser[key] === null || orderData.telegramUser[key] === undefined) {
      delete orderData.telegramUser[key];
    }
  });

  // üßæ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
  console.log("üì§ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", orderData);

  // üßæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ Firestore
  submitOrder(orderData);

  // üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram WebApp
  tg.sendData(JSON.stringify(orderData));

  // üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –æ–ø–ª–∞—Ç—ã
  if (orderData.payment === "card") {
    showToast("üí≥ –û–ø–ª–∞—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç—É:\n4441 1144 1619 6630\n–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: MiniBeasts 3D");
  }

  if (orderData.payment === "ton") {
    showToast("ü™ô TON-–ø–µ—Ä–µ–∫–∞–∑:\nhttps://tonkeeper.app/transfer/...");
  }

  // ‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º overlay —Å—Ä–∞–∑—É
  closeCheckout();

  // ‚úÖ –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ WebApp
  setTimeout(() => {
    showToast("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
    cart = [];
    updateCart();
    tg.close();
  }, 1500);
}


// === –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ===
document.getElementById("confirmBtn").addEventListener("click", confirmOrder);
document.getElementById("sizeSelect").addEventListener("change", calculatePrice);
document.getElementById("plasticSelect").addEventListener("change", calculatePrice);

// === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
document.getElementById("checkoutOverlay").style.display = "none";

// === –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è ===
function openCheckout() {
  if (cart.length === 0) {
    showToast("üö´ –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è. –î–æ–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä–∏ –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è–º.");
    return;
  }

  document.getElementById("checkoutOverlay").style.display = "flex";
}



// === –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ ===
// === –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ===
async function submitOrder(orderData) {
  try {
    const cleanData = JSON.parse(JSON.stringify(orderData)); // üßº –£–¥–∞–ª—è–µ–º undefined/null

    const docRef = await firebase.firestore().collection("orders").add(cleanData);
    console.log("üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å–∞–Ω–æ –∑ ID:", docRef.id);

    Telegram.WebApp.sendData(JSON.stringify({
      status: "success",
      orderId: docRef.id
    }));

    showToast("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ! –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.");
  } catch (e) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", e);
    showToast("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø–∏—Å–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
  }
}

// === –ó–∞–∫—Ä–∏—Ç—Ç—è —Ñ–æ—Ä–º–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è ===
function closeCheckout() {
  const overlay = document.getElementById("checkoutOverlay");
  if (overlay && overlay.style.display !== "none") {
    overlay.style.display = "none";
    console.log("‚úÖ –§–æ—Ä–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–∞ —á–µ—Ä–µ–∑ closeCheckout()");
  }
}

// === –ü—Ä–∏–≤'—è–∑–∫–∞ —Ñ—É–Ω–∫—Ü—ñ–π –¥–æ window ===
window.filterByType = filterByType;
window.openCustomizationModal = openCustomizationModal;
window.clearCart = clearCart;
window.openCheckout = openCheckout;
window.closeCheckout = closeCheckout;
window.closeModal = closeModal;
window.closeImageModal = closeImageModal;
window.addToCart = addToCart;
window.confirmCustomization = confirmCustomization;
window.deleteFromCart = deleteFromCart;
window.filterProducts = filterProducts;

// === üñ®Ô∏è –î—Ä—É–∫ –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ===
async function submitCustomPrint(event) {
  event.preventDefault();

  const fileInput = document.getElementById("fileInput");
  const comment = document.getElementById("commentInput").value.trim();
  const contact = document.getElementById("contactInput").value.trim();

  if (!fileInput.files[0] || !comment || !contact) {
    showToast("‚ö†Ô∏è –î–æ–¥–∞–π—Ç–µ —Ñ–∞–π–ª, –∫–æ–º–µ–Ω—Ç–∞—Ä —ñ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –∑–≤'—è–∑–∫—É");
    return;
  }

  const file = fileInput.files[0];
  const telegramUser = Telegram.WebApp.initDataUnsafe?.user || {};

  const data = {
    fileName: file.name,
    fileType: file.name.split('.').pop().toLowerCase(),
    comment,
    contact,
    telegramUser: {
      id: telegramUser.id || null,
      username: telegramUser.username || ""
    },
    timestamp: new Date().toISOString(),
    status: "pending"
  };

  try {
    const cleanData = JSON.parse(JSON.stringify(data));
    const docRef = await firebase.firestore().collection("customPrints").add(cleanData);
    console.log("üñ®Ô∏è –ó–∞–ø–∏—Ç –Ω–∞ –¥—Ä—É–∫ –∑–∞–ø–∏—Å–∞–Ω–æ –∑ ID:", docRef.id);
    showToast("‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–π–Ω—è—Ç–∞! –ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—å –∑ –≤–∞–º–∏.");

    document.getElementById("orderForm").reset(); // üßº –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º–∏
    document.getElementById("custom-order").classList.add("hidden"); // üõë –ó–∞–∫—Ä–∏—Ç—Ç—è –±–ª–æ–∫—É

    // ‚úÖ –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ—Ç–æ–≤–∏—Ö –≤–∏—Ä–æ–±—ñ–≤
    document.getElementById("ready-products").classList.add("visible");
    document.getElementById("ready-products").classList.remove("hidden");

    setTimeout(() => {
      showToast("‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞!");
    }, 1000);

  } catch (e) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É –∑–∞–ø–∏—Ç—É:", e);
    showToast("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–ø–∏—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
  }
}

// === –ü—Ä–∏–≤'—è–∑–∫–∞ –æ–±—Ä–æ–±–Ω–∏–∫–∞ —Ñ–æ—Ä–º–∏ ===
document.getElementById("orderForm").addEventListener("submit", submitCustomPrint);
