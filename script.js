// script.js ‚Äî –ß–∞—Å—Ç—å 1

let cart = [];
let currentProduct = null;
let currentSlideIndex = 0;
let currentSliderImages = [];

// ‚úÖ Telegram WebApp –µ–º—É–ª—è—Ü—ñ—è (–¥–ª—è —Ç–µ—Å—Ç—ñ–≤ —É –±—Ä–∞—É–∑–µ—Ä—ñ)
window.Telegram = {
  WebApp: {
    sendData: (data) => console.log("üì§ –ï–º—É–ª—è—Ü—ñ—è sendData:", data),
    close: () => console.log("üõë –ï–º—É–ª—è—Ü—ñ—è –∑–∞–∫—Ä–∏—Ç—Ç—è WebApp"),
    expand: () => console.log("üîç –ï–º—É–ª—è—Ü—ñ—è expand()")
  }
};

const tg = window.Telegram.WebApp;
console.log("üì° Telegram WebApp API:", tg);

// üîß –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –º—ñ–∂ –º–æ–¥—É–ª—è–º–∏ –∞–¥–º—ñ–Ω–∫–∏
window.showAddProductForm = function () {
  const container = document.getElementById("adminContent");
  container.innerHTML = generateAddProductForm();

  // ‚è≥ –û—á—ñ–∫—É—î–º–æ DOM
  const trySetup = () => {
    const form = document.getElementById("productForm");
    if (form) {
      setupProductFormHandler();
    } else if (trySetup.attempts < 10) {
      trySetup.attempts++;
      setTimeout(trySetup, 50);
    } else {
      console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ñ–æ—Ä–º—É –ø—ñ—Å–ª—è –≤—Å—Ç–∞–≤–∫–∏.");
    }
  };
  trySetup.attempts = 0;
  trySetup();
};

// üìÑ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å
window.showOrderList = function () {
  const container = document.getElementById("adminContent");
  container.innerHTML = "<h3>üìÑ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3><div id='orderList'></div>";

  const list = document.getElementById("orderList");
  list.innerHTML = "<p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>";

  firebase.firestore().collection("orders").orderBy("timestamp", "desc").get()
    .then(snapshot => {
      list.innerHTML = "";
      if (snapshot.empty) {
        list.innerHTML = "<p>üòï –ó–∞–º–æ–≤–ª–µ–Ω—å –ø–æ–∫–∏ –Ω–µ–º–∞—î</p>";
        return;
      }

      snapshot.forEach(doc => {
        const data = doc.data();
        const item = document.createElement("div");
        item.className = "admin-order";

        item.innerHTML = `
          <strong>${data.contact?.name || "–ë–µ–∑ —ñ–º–µ–Ω—ñ"}</strong> ‚Äî ${data.contact?.phone || "–ë–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω—É"}<br>
          –î–æ—Å—Ç–∞–≤–∫–∞: ${data.delivery?.city}, ‚Ññ${data.delivery?.branch}<br>
          –û–ø–ª–∞—Ç–∞: ${data.paymentMethod}<br>
          –°—É–º–∞: ${data.order?.reduce((sum, item) => sum + item.price, 0)} –≥—Ä–Ω<br>
          –°—Ç–∞—Ç—É—Å: ${data.status}<br>
          <details>
            <summary>üì¶ –î–µ—Ç–∞–ª—ñ</summary>
            ${data.order?.map(item => {
              const feature = item.feature ? ` ‚Äî ${item.feature}` : "";
              return `${item.name} (${item.size}–º–º, –ø–ª–∞—Å—Ç–∏–∫ ${item.plastic})${feature} ‚Äî ${item.price} –≥—Ä–Ω`;
            }).join("<br>")}
          </details>
          <hr>
        `;

        list.appendChild(item);
      });
    })
    .catch(err => {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å:", err);
      list.innerHTML = "<p>‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</p>";
    });
}

// üì¶ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ç–æ–≤–∞—Ä—ñ–≤
window.showProductList = function () {
  const container = document.getElementById("adminContent");
  container.innerHTML = "<h3>üì¶ –í—Å—ñ —Ç–æ–≤–∞—Ä–∏</h3><div id='productList'></div>";

  const list = document.getElementById("productList");
  list.innerHTML = "<p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>";

  firebase.firestore().collection("products").get()
    .then(snapshot => {
      list.innerHTML = "";
      if (snapshot.empty) {
        list.innerHTML = "<p>üòï –ù–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤</p>";
        return;
      }

      snapshot.forEach(doc => {
        const data = doc.data();
        const item = document.createElement("div");
        item.className = "admin-product";

        item.innerHTML = `
          <strong>${data.name}</strong><br>
          –¶—ñ–Ω–∞: ${data.base} –≥—Ä–Ω<br>
          –¢–µ–≥–∏: ${data.tags?.join(", ")}<br>
          <img src="${data.images?.[0] || ''}" alt="${data.name}" width="100">
          <hr>
        `;

        list.appendChild(item);
      });
    })
    .catch(err => {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤:", err);
      list.innerHTML = "<p>‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–≤–∞—Ä–∏</p>";
    });
}

// üìä –ü–µ—Ä–µ–º–∏–∫–∞—á –∫–∞—Ç–µ–≥–æ—Ä—ñ–π (–≥–æ—Ç–æ–≤—ñ / –∫–∞—Å—Ç–æ–º)
function openCategory(category) {
  const ready = document.getElementById("ready-products");
  const custom = document.getElementById("custom-order");

  if (category === "ready") {
    ready.classList.add("visible");
    ready.classList.remove("hidden");
    custom.classList.add("hidden");
    custom.classList.remove("visible");
  } else {
    custom.classList.add("visible");
    custom.classList.remove("hidden");
    ready.classList.add("hidden");
    ready.classList.remove("visible");
  }
}

// üîç –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ç–æ–≤–∞—Ä—ñ–≤ –ø–æ —Ç–µ–≥—É
function filterByType(event) {
  const tag = event.target.dataset.tag;
  const cards = document.querySelectorAll(".product-card");

  cards.forEach(card => {
    const tags = card.querySelector(".tags")?.textContent || "";
    const match = tag === "all" || tags.includes(tag);
    card.style.display = match ? "block" : "none";
  });

  // üîò –í—ñ–∑—É–∞–ª—å–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
  document.querySelectorAll(".filter-button").forEach(btn => {
    btn.classList.remove("active-filter");
  });
  event.target.classList.add("active-filter");
}

// ‚¨ÖÔ∏è –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å–ª–∞–π–¥—ñ–≤ –Ω–∞–∑–∞–¥
function prevSlide(button) {
  const slider = button.closest(".slider");
  const slides = slider.querySelectorAll("img");
  const activeIndex = Array.from(slides).findIndex(slide => slide.classList.contains("active"));

  slides[activeIndex].classList.remove("active");
  const newIndex = (activeIndex - 1 + slides.length) % slides.length;
  slides[newIndex].classList.add("active");
}

// ‚û°Ô∏è –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å–ª–∞–π–¥—ñ–≤ –≤–ø–µ—Ä–µ–¥
function nextSlide(button) {
  const slider = button.closest(".slider");
  const slides = slider.querySelectorAll("img");
  const activeIndex = Array.from(slides).findIndex(slide => slide.classList.contains("active"));

  slides[activeIndex].classList.remove("active");
  const newIndex = (activeIndex + 1) % slides.length;
  slides[newIndex].classList.add("active");
}

// üñºÔ∏è –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
function openModal(src) {
  const modal = document.getElementById("imageModal");
  const modalImage = document.getElementById("modalImage");

  modalImage.src = src;
  modal.style.display = "flex";

  // –ó–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞
  const slider = Array.from(document.querySelectorAll(".slide")).find(img => img.src === src)?.closest(".slider");
  currentSliderImages = slider ? Array.from(slider.querySelectorAll("img")) : [];
  currentSlideIndex = currentSliderImages.findIndex(img => img.src === src);
}

// ‚ùå –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
function closeImageModal() {
  document.getElementById("imageModal").style.display = "none";
}

// ‚¨ÖÔ∏è‚¨ÜÔ∏è –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –≤ –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ
function showPrevModalImage() {
  if (!currentSliderImages.length) return;
  currentSlideIndex = (currentSlideIndex - 1 + currentSliderImages.length) % currentSliderImages.length;
  document.getElementById("modalImage").src = currentSliderImages[currentSlideIndex].src;
}

function showNextModalImage() {
  if (!currentSliderImages.length) return;
  currentSlideIndex = (currentSlideIndex + 1) % currentSliderImages.length;
  document.getElementById("modalImage").src = currentSliderImages[currentSlideIndex].src;
}
// üìä –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∫–∞—Å—Ç–æ–º—ñ–∑–∞—Ü—ñ—ó
function openCustomizationModal(button) {
  const card = button.closest(".product-card");
  currentProduct = card;

  const title = card.querySelector("h3")?.textContent || "–¢–æ–≤–∞—Ä";
  document.getElementById("modalTitle").textContent = title;

  // üß© –û—Ç—Ä–∏–º–∞–Ω–Ω—è sizePriceMap –∑ Firestore
  const productId = card.dataset.id;
  firebase.firestore().collection("products").doc(productId).get().then(doc => {
    if (!doc.exists) {
      alert("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
      return;
    }

    const data = doc.data();
    const sizePriceMap = data.sizePriceMap || {};
    const sizeSelect = document.getElementById("sizeSelect");
    const plasticSelect = document.getElementById("plasticSelect");
    const finalPriceField = document.getElementById("finalPrice");

    // üßº –û—á–∏—Å—Ç–∫–∞ —Å–µ–ª–µ–∫—Ç—É
    sizeSelect.innerHTML = "";

    // üß© –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –æ–ø—Ü—ñ–π —Ä–æ–∑–º—ñ—Ä—É
    Object.entries(sizePriceMap).forEach(([size, price]) => {
      const option = document.createElement("option");
      option.value = size;
      option.textContent = `${size} –º–º`;
      sizeSelect.appendChild(option);
    });

    // üì¶ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª–∫–∏
    document.getElementById("customModal").style.display = "flex";

    // üßÆ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏
    function updatePrice() {
      const selectedSize = sizeSelect.value;
      const base = sizePriceMap[selectedSize];
      const plastic = parseInt(plasticSelect.value);
      const plasticMultiplier = plastic === 1 ? 1.0 : plastic === 2 ? 1.05 : 1.15;
      const final = Math.round(base * plasticMultiplier);
      finalPriceField.textContent = `–¶—ñ–Ω–∞: ${final} –≥—Ä–Ω`;
      document.getElementById("confirmButton").style.display = "block";
    }

    // üîÑ –°–ª—É—Ö–∞—á—ñ –∑–º—ñ–Ω
    sizeSelect.addEventListener("change", updatePrice);
    plasticSelect.addEventListener("change", updatePrice);

    // üîÑ –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫
    updatePrice();
  });
}


// ‚ùå –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
function closeModal() {
  document.getElementById("customModal").style.display = "none";
  currentProduct = null;
}

// üìê –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ openCustomizationModal)

// ‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –¥–æ –∫–æ—Ä–∑–∏–Ω–∏
function confirmCustomization() {
  if (!currentProduct) return;

  const name = currentProduct.querySelector("h3")?.textContent || "–¢–æ–≤–∞—Ä";
  const size = document.getElementById("sizeSelect").value;
  const plastic = document.getElementById("plasticSelect").value;
  const comment = document.getElementById("customComment").value.trim();
  const priceText = document.getElementById("finalPrice").textContent;
  const price = parseInt(priceText.replace(/\D/g, ""), 10);

  cart.push({ name, size, plastic, comment, price });
  updateCart();
  closeModal();
  showToast("‚ûï –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏");
}
// üîÅ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏
function updateCart() {
  const list = document.getElementById("cartItems");
  const total = document.getElementById("cartTotal");

  list.innerHTML = "";
  let sum = 0;

  cart.forEach((item, index) => {
    const li = document.createElement("li");
    li.textContent = `${item.name} (${item.size}–º–º, –ø–ª–∞—Å—Ç–∏–∫ ${item.plastic}) ‚Äî ${item.price} –≥—Ä–Ω`;
    const delBtn = document.createElement("button");
    delBtn.textContent = "‚ùå";
    delBtn.onclick = () => deleteFromCart(index);
    li.appendChild(delBtn);
    list.appendChild(li);
    sum += item.price;
  });

  total.textContent = `–°—É–º–∞: ${sum} –≥—Ä–Ω`;
}

// ‚ùå –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –∑ –∫–æ—Ä–∑–∏–Ω–∏
function deleteFromCart(index) {
  cart.splice(index, 1);
  updateCart();
  showToast("üóë –¢–æ–≤–∞—Ä –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∫–æ—Ä–∑–∏–Ω–∏");
}

// üßπ –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω–∏
function clearCart() {
  cart = [];
  updateCart();
  showToast("üßπ –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞");
}

// üîî –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
function showToast(message) {
  let toast = document.querySelector(".toast");
  if (!toast) {
    toast = document.createElement("div");
    toast.className = "toast";
    document.body.appendChild(toast);
  }

  toast.textContent = message;
  toast.classList.add("visible");

  setTimeout(() => {
    toast.classList.remove("visible");
  }, 3000);
}
// ‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
function confirmOrder() {
  const name = document.getElementById("nameInput").value.trim();
  const phone = document.getElementById("phoneInput").value.trim();
  const city = document.getElementById("cityInput").value.trim();
  const branch = document.getElementById("branchInput").value.trim();
  const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked')?.value;

  const rawUser = Telegram?.WebApp?.initDataUnsafe?.user || {};
  const telegramUser = {
    id: rawUser.id || null,
    username: rawUser.username || ""
  };

  const orderData = {
    contact: { name, phone },
    delivery: { city, branch },
    paymentMethod,
    order: cart,
    telegramUser,
    timestamp: new Date().toISOString(),
    status: "pending"
  };

  // ‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
  if (!name || !phone || !city || !branch) {
    showToast("‚ö†Ô∏è –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è");
    return;
  }

  // üßº –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø—É—Å—Ç–∏—Ö –ø–æ–ª—ñ–≤
  Object.keys(orderData.telegramUser).forEach(key => {
    if (orderData.telegramUser[key] === null || orderData.telegramUser[key] === undefined) {
      delete orderData.telegramUser[key];
    }
  });

  console.log("üì§ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", orderData);

  // üßæ –ó–∞–ø–∏—Å –≤ Firestore
  submitOrder(orderData);

  // üì° –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤ Telegram WebApp
  tg.sendData(JSON.stringify(orderData));

  // üí≥ –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ–ø–ª–∞—Ç–∏
  if (paymentMethod === "card") {
    showToast("üí≥ –û–ø–ª–∞—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç—É:\n4441 1144 1619 6630\n–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: MiniBeasts 3D");
  }

  if (paymentMethod === "ton") {
    showToast("ü™ô TON-–ø–µ—Ä–µ–∫–∞–∑:\nhttps://tonkeeper.app/transfer/...");
  }

  // ‚úÖ –ó–∞–∫—Ä–∏—Ç—Ç—è overlay
  closeCheckout();

  // ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è WebApp
  setTimeout(() => {
    showToast("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
    cart = [];
    updateCart();
    tg.close();
  }, 1500);
}

// üßæ –ó–∞–ø–∏—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ Firestore
async function submitOrder(orderData) {
  try {
    const cleanData = JSON.parse(JSON.stringify(orderData)); // üßº –í–∏–¥–∞–ª–µ–Ω–Ω—è null/undefined
    const docRef = await firebase.firestore().collection("orders").add(cleanData);
    console.log("üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å–∞–Ω–æ –∑ ID:", docRef.id);

    Telegram.WebApp.sendData(JSON.stringify({
      status: "success",
      orderId: docRef.id
    }));

    showToast("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ! –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.");
  } catch (e) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", e);
    showToast("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø–∏—Å–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
  }
}

// üîó –ü—Ä–∏–≤'—è–∑–∫–∞ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —ñ—Å–Ω—É—é—Ç—å)
document.getElementById("confirmBtn")?.addEventListener("click", confirmOrder);
document.getElementById("sizeSelect")?.addEventListener("change", calculatePrice);
document.getElementById("plasticSelect")?.addEventListener("change", calculatePrice);

// üßæ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ overlay —ñ—Å–Ω—É—î)
const checkoutOverlay = document.getElementById("checkoutOverlay");
if (checkoutOverlay && checkoutOverlay.style) {
  checkoutOverlay.style.display = "none";
} else {
  console.warn("‚ÑπÔ∏è checkoutOverlay –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó ‚Äî –º–æ–∂–ª–∏–≤–æ, —Ü–µ –∞–¥–º—ñ–Ω–∫–∞");
}


// üì¶ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥–æ—Ç–æ–≤–∏—Ö –º–æ–¥–µ–ª–µ–π –∑ Firestore
async function loadProducts() {
  const grid = document.getElementById("productGrid");
  if (!grid) {
    console.warn("‚ö†Ô∏è productGrid –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
    return;
  }

  grid.innerHTML = "<p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤...</p>";

  try {
    const snapshot = await firebase.firestore().collection("products").get();
    grid.innerHTML = "";

    if (snapshot.empty) {
      grid.innerHTML = "<p>üòï –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤</p>";
      return;
    }

    snapshot.forEach(doc => {
      const data = doc.data();
      const card = document.createElement("div");
      card.className = "product-card";

      card.innerHTML = `
        <h3>${data.name}</h3>
        <p class="feature">${data.feature || ""}</p>
        <img src="${data.images?.[0] || ''}" alt="${data.name}" loading="lazy">
        <p class="base">${data.base} –≥—Ä–Ω ‚Äî –±–∞–∑–æ–≤–∞ –º–æ–¥–µ–ª—å (80–º–º, –æ–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π –ø–ª–∞—Å—Ç–∏–∫)</p>
        <button onclick="openCustomizationModal(this)">‚öôÔ∏è –ö–∞—Å—Ç–æ–º—ñ–∑—É–≤–∞—Ç–∏</button>
      `;

      grid.appendChild(card); // ‚úÖ —Ç–µ–ø–µ—Ä—å –≤–Ω—É—Ç—Ä–∏ forEach
    });
  } catch (err) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤:", err);
    grid.innerHTML = "<p>‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–≤–∞—Ä–∏</p>";
  }
}

// üöÄ –í–∏–∫–ª–∏–∫ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener("DOMContentLoaded", () => {
  loadProducts();
});
