// == üì¶ –ú–û–î–£–õ–¨ –ê–î–ú–Ü–ù–ö–ò MiniBeasts 3D == //
// –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ window.functionName

// == üîç –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ç–æ–≤–∞—Ä—ñ–≤ == //
window.filterProducts = function () {
  const input = document.getElementById("searchInput").value.toLowerCase();
  const cards = document.querySelectorAll("#ready-products .product-card");

  cards.forEach(card => {
    const title = card.querySelector("h3").textContent.toLowerCase();
    const tags = card.querySelector(".tags")?.textContent.toLowerCase() || "";
    const match = title.includes(input) || tags.includes(input);
    card.style.display = match ? "block" : "none";
  });
};

// == üîß –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏ == //
window.showAddProductForm = function () {
  const container = document.getElementById("adminContent");
  container.innerHTML = generateAddProductForm();

  requestAnimationFrame(() => {
    const form = document.getElementById("productForm");
    if (form) {
      setupProductFormHandler();
    } else {
      console.warn("‚ö†Ô∏è –§–æ—Ä–º–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –ø—ñ—Å–ª—è –≤—Å—Ç–∞–≤–∫–∏.");
    }
  });
};

window.showProductList = async function () {
  const container = document.getElementById("adminContent");
  container.innerHTML = `<h2>üì¶ –í—Å—ñ —Ç–æ–≤–∞—Ä–∏</h2><div class="admin-product-list">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>`;

  const products = await fetchProducts();
  const list = document.querySelector(".admin-product-list");

  if (!products.length) {
    list.innerHTML = `<p>‚ö†Ô∏è –¢–æ–≤–∞—Ä—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>`;
    return;
  }

  let html = "";

  products.forEach((product, index) => {
    html += `
      <div class="admin-product-card">
        <h3>${index + 1}. ${product.name}</h3>
        <p><strong>–û–ø–∏—Å:</strong> ${product.description}</p>
        <p><strong>–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:</strong> ${product.feature}</p>
        <p><strong>–¶—ñ–Ω–∞:</strong> ${product.basePrice} –≥—Ä–Ω</p>
        <p><strong>–¢–µ–≥–∏:</strong> ${product.tags?.join(" ") || "‚Äî"}</p>

        <details>
          <summary>‚öôÔ∏è –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è</summary>
          <ul>
            <li>üìè –†–æ–∑–º—ñ—Ä–∏: 80–º–º = ${product.size80}, 100–º–º = ${product.size100}, 120–º–º = ${product.size120}</li>
            <li>üé® –ü–ª–∞—Å—Ç–∏–∫: –æ–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π = ${product.plastic1}, –¥–≤–æ–∫–æ–ª—ñ—Ä–Ω–∏–π = ${product.plastic2}, —Ç—Ä–∏–∫–æ–ª—ñ—Ä–Ω–∏–π = ${product.plastic3}</li>
          </ul>
        </details>

        ${product.images?.length ? `<p><strong>–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</strong></p>` : ""}
        <div class="image-preview">
          ${product.images?.map(src => `<img src="${src}" width="80">`).join("")}
        </div>

        <div class="actions">
          <button onclick="editProduct('${product.id}')">‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>
          <button onclick="deleteProduct('${product.id}')">üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏</button>
        </div>
      </div>
      <hr>
    `;
  });

  list.innerHTML = html;
};

// == üî• –û—Ç–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ —Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å –∑ Firebase == //
window.fetchProducts = async function () {
  try {
    const snapshot = await firebase.firestore().collection("products").orderBy("createdAt", "desc").get();
    return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—ñ–≤:", error);
    return [];
  }
};

window.fetchOrders = async function () {
  try {
    const snapshot = await firebase.firestore().collection("orders").orderBy("timestamp", "desc").get();
    return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω—å:", error);
    return [];
  }
};

window.showOrderList = async function () {
  const container = document.getElementById("adminContent");

  container.innerHTML = `
    <h2>üì® –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</h2>
    <input type="text" id="orderSearch" placeholder="üîç –ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è..." oninput="filterOrders()">
    <table id="orderTable">
      <thead>
        <tr>
          <th>‚Ññ</th>
          <th>–Ü–º‚Äô—è</th>
          <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
          <th>–¢–æ–≤–∞—Ä</th>
          <th>–†–æ–∑–º—ñ—Ä</th>
          <th>–ü–ª–∞—Å—Ç–∏–∫</th>
          <th>–ö–æ–º–µ–Ω—Ç–∞—Ä</th>
          <th>–î–∞—Ç–∞</th>
          <th>–°—Ç–∞—Ç—É—Å</th>
          <th>–î—ñ—è</th>
        </tr>
      </thead>
      <tbody id="orderBody"></tbody>
    </table>
  `;

  const orders = await fetchOrders();
  const tbody = document.getElementById("orderBody");

  orders.forEach((order, index) => {
    const item = order.order?.[0] || {};
    const row = document.createElement("tr");
    row.innerHTML = `
      <td>${index + 1}</td>
      <td>${order.contact?.name || "‚Äî"}</td>
      <td>${order.contact?.phone || "‚Äî"}</td>
      <td>${item.name || "‚Äî"}</td>
      <td>${item.size || "‚Äî"}</td>
      <td>${item.plastic || "‚Äî"}</td>
      <td>${item.comment || order.customPrints?.comment || "‚Äî"}</td>
      <td>${new Date(order.timestamp).toLocaleDateString()}</td>
      <td>${renderStatus(order.status)}</td>
      <td>
        <select onchange="updateOrderStatus('${order.id}', this.value)">
          <option value="pending">üü° –û—á—ñ–∫—É—î</option>
          <option value="paid">üí≥ –û–ø–ª–∞—á–µ–Ω–æ</option>
          <option value="accepted">üì¶ –í —Ä–æ–±–æ—Ç—ñ</option>
          <option value="shipped">üöö –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ</option>
          <option value="done">‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ</option>
        </select>
        <button onclick="openChat('${order.telegramUser?.username}', '${order.contact?.phone}')">üí¨</button>
      </td>
    `;
    tbody.appendChild(row);
  });
};

window.renderStatus = function (code) {
  const map = {
    pending: "üü° –û—á—ñ–∫—É—î",
    paid: "üí≥ –û–ø–ª–∞—á–µ–Ω–æ",
    accepted: "üì¶ –í —Ä–æ–±–æ—Ç—ñ",
    shipped: "üöö –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ",
    done: "‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ"
  };
  return map[code] || "‚Äî";
};


// == üß± –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É == //
window.generateAddProductForm = function () {
  return `
    <form id="productForm">
      <h2>‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä</h2>

      <div class="form-group">
        <label>üìõ –ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É:</label>
        <input type="text" id="productName" required>
      </div>

      <div class="form-group">
        <label>üìÑ –û–ø–∏—Å:</label>
        <input type="text" id="productDescription">
      </div>

      <div class="form-group">
        <label>‚ú® –û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:</label>
        <input type="text" id="productFeature">
      </div>

      <div class="form-group">
        <label>üí∞ –ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ (–≥—Ä–Ω):</label>
        <input type="number" id="basePrice" required>
      </div>

      <div class="form-group">
        <label>üìè –†–æ–∑–º—ñ—Ä–∏ (–∫–æ–µ—Ñ.):</label>
        <input type="number" id="size80" placeholder="80 –º–º">
        <input type="number" id="size100" placeholder="100 –º–º">
        <input type="number" id="size120" placeholder="120 –º–º">
      </div>

      <div class="form-group">
        <label>üé® –¢–∏–ø–∏ –ø–ª–∞—Å—Ç–∏–∫—É (–∫–æ–µ—Ñ.):</label>
        <input type="number" id="plastic1" placeholder="–û–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π">
        <input type="number" id="plastic2" placeholder="–î–≤–æ–∫–æ–ª—ñ—Ä–Ω–∏–π">
        <input type="number" id="plastic3" placeholder="–¢—Ä–∏–∫–æ–ª—ñ—Ä–Ω–∏–π">
      </div>

      <div class="form-group">
        <label>üè∑Ô∏è –¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª):</label>
        <input type="text" id="productTags" placeholder="labubu glow —Ä—É—á–Ω–∞ —Ä–æ–±–æ—Ç–∞">
      </div>

      <div class="form-group">
        <label>üñºÔ∏è –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É:</label>
        <div id="imageInputs">
          <input type="text" class="image-url" placeholder="img/example.jpg">
        </div>
        <button type="button" onclick="addImageInput()">‚ûï –î–æ–¥–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</button>
      </div>

      <div class="form-group">
        <label>üìä –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω—ñ —Ü—ñ–Ω–∏ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó:</label>
        <textarea id="manualPrices" rows="4" placeholder="80–º–º + –æ–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π = 150 –≥—Ä–Ω"></textarea>
      </div>

      <div class="form-group">
        <button type="submit">üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ —Ç–æ–≤–∞—Ä</button>
      </div>
    </form>
  `;
};
// == üñºÔ∏è –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –ø–æ–ª—ñ–≤ –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω—å == //
window.addImageInput = function () {
  const container = document.getElementById("imageInputs");
  const input = document.createElement("input");
  input.type = "text";
  input.className = "image-url";
  input.placeholder = "img/example.jpg";
  container.appendChild(input);
};

// == üì• –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É == //
window.setupProductFormHandler = function () {
  const form = document.getElementById("productForm");
  if (!form) {
    console.warn("‚ö†Ô∏è –§–æ—Ä–º–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ ‚Äî –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ.");
    return;
  }

  form.addEventListener("submit", function (e) {
    e.preventDefault();

    const data = {
      name: form.querySelector("#productName").value.trim(),
      description: form.querySelector("#productDescription").value.trim(),
      feature: form.querySelector("#productFeature").value.trim(),
      basePrice: parseFloat(form.querySelector("#basePrice").value),
      size80: parseFloat(form.querySelector("#size80").value) || "",
      size100: parseFloat(form.querySelector("#size100").value) || "",
      size120: parseFloat(form.querySelector("#size120").value) || "",
      plastic1: parseFloat(form.querySelector("#plastic1").value) || "",
      plastic2: parseFloat(form.querySelector("#plastic2").value) || "",
      plastic3: parseFloat(form.querySelector("#plastic3").value) || "",
      tags: form.querySelector("#productTags").value.trim().split(" "),
      images: Array.from(form.querySelectorAll(".image-url"))
        .map(input => input.value.trim())
        .filter(src => src !== ""),
      manualPrices: form.querySelector("#manualPrices").value.trim(),
      timestamp: new Date().toISOString()
    };

    // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Firestore
    firebase.firestore().collection("products").add(data)
      .then(() => {
        // üß± –í—Å—Ç–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const cardHTML = `
          <div class="product-card">
            <div class="config" style="display:none;">
              <span class="base">${data.basePrice}</span>
              <span class="size80">${data.size80}</span>
              <span class="size100">${data.size100}</span>
              <span class="size120">${data.size120}</span>
              <span class="plastic1">${data.plastic1}</span>
              <span class="plastic2">${data.plastic2}</span>
              <span class="plastic3">${data.plastic3}</span>
            </div>

            <div class="slider">
              ${data.images.map((src, i) => `
                <img src="${src}" class="slide${i === 0 ? ' active' : ''}" onclick="openModal(this.src)">
              `).join("")}
              <button class="prev" onclick="prevSlide(this)">‚Üê</button>
              <button class="next" onclick="nextSlide(this)">‚Üí</button>
            </div>

            <h3>${data.name}</h3>
            <p>${data.description}</p>
            <p><strong>–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:</strong> ${data.feature}</p>
            <p><strong>–¶—ñ–Ω–∞:</strong> ${data.basePrice} –≥—Ä–Ω</p>
            <div class="tags" style="display:none;">${data.tags.join(" ")}</div>
            <button onclick="openCustomizationModal(this)">üìä –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å</button>
          </div>
        `;

        const grid = document.getElementById("productGrid");
        if (grid) {
          grid.insertAdjacentHTML("beforeend", cardHTML);
        }

        alert("‚úÖ –¢–æ–≤–∞—Ä –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ Firebase!");
        form.reset();
      })
      .catch(err => {
        alert("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ: " + err.message);
      });
  });
}; // ‚Üê –≤–æ—Ç —ç—Ç–∞ —Å–∫–æ–±–∫–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç setupProductFormHandler
