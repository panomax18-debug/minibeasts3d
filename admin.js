// admin.js ‚Äî –ß–∞—Å—Ç—å 1

// üß≠ –ü–µ—Ä–µ–º–∏–∫–∞—á –≤–∫–ª–∞–¥–æ–∫ –∞–¥–º—ñ–Ω–∫–∏ –∑ –æ—á–∏—â–µ–Ω–Ω—è–º
function clearAdminContent() {
  const container = document.getElementById("adminContent");
  container.innerHTML = "";
}

document.getElementById("navAdd")?.addEventListener("click", () => {
  clearAdminContent();
  document.getElementById("adminContent").innerHTML = generateAddProductForm();
  setupProductFormHandler();
});

document.getElementById("navList")?.addEventListener("click", () => {
  clearAdminContent();
  showProductList(); // —è–∫—â–æ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
});

document.getElementById("navOrders")?.addEventListener("click", () => {
  clearAdminContent();
  showOrderList();
});

// üßæ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
function generateAddProductForm() {
  return `
    <h3>‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä</h3>
    <form id="productForm">
      <div class="form-group">
        <label>–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É</label>
        <input type="text" id="productName" required>
      </div>

      <div class="form-group">
        <label>–ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞</label>
        <input type="number" id="basePrice" required>
      </div>

      <div class="form-group">
        <label>–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ —Ä–æ–∑–º—ñ—Ä—É (80, 100, 120)</label>
        <input type="number" id="size80" placeholder="80–º–º" required>
        <input type="number" id="size100" placeholder="100–º–º" required>
        <input type="number" id="size120" placeholder="120–º–º" required>
      </div>

      <div class="form-group">
        <label>–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –ø–ª–∞—Å—Ç–∏–∫—É (1, 2, 3)</label>
        <input type="number" id="plastic1" placeholder="–û–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π" required>
        <input type="number" id="plastic2" placeholder="–î–≤–æ–∫–æ–ª—ñ—Ä–Ω–∏–π" required>
        <input type="number" id="plastic3" placeholder="–¢—Ä–∏–∫–æ–ª—ñ—Ä–Ω–∏–π" required>
      </div>

      <div class="form-group">
        <label>–¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É)</label>
        <input type="text" id="tagsInput" placeholder="labubu, cat, set">
      </div>

      <div class="form-group">
        <label>–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å (—É–Ω—ñ–∫–∞–ª—å–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å)</label>
        <input type="text" id="featureInput" placeholder="—Å–≤—ñ—Ç–∏—Ç—å—Å—è –≤ —Ç–µ–º—Ä—è–≤—ñ, —Ä—É—Ö–æ–º—ñ —á–∞—Å—Ç–∏–Ω–∏...">
      </div>

      <div class="form-group">
        <label>–¶—ñ–Ω–∏ –ø–æ —Ä–æ–∑–º—ñ—Ä—É (–º–º)</label>
        <textarea id="sizePriceMapInput" rows="3" placeholder="80:150, 100:250, 120:400"></textarea>
      </div>

      <div class="form-group">
      <label>–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É</label>
      <input type="file" id="productImages" multiple accept="image/*">
      </div>


      <button type="submit">üì§ –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä</button>
    </form>
  `;
}

// üßæ –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
function setupProductFormHandler() {
  const form = document.getElementById("productForm");
  if (!form) return;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const name = document.getElementById("productName").value.trim();
    const base = parseFloat(document.getElementById("basePrice").value);
    const size80 = parseFloat(document.getElementById("size80").value);
    const size100 = parseFloat(document.getElementById("size100").value);
    const size120 = parseFloat(document.getElementById("size120").value);
    const plastic1 = parseFloat(document.getElementById("plastic1").value);
    const plastic2 = parseFloat(document.getElementById("plastic2").value);
    const plastic3 = parseFloat(document.getElementById("plastic3").value);
    const tags = document.getElementById("tagsInput").value.trim().split(",").map(t => t.trim());
    const feature = document.getElementById("featureInput").value.trim();
    const sizePriceRaw = document.getElementById("sizePriceMapInput").value.trim();

    // üß© –ü–∞—Ä—Å–∏–Ω–≥ sizePriceMap
    const sizePriceMap = {};
    let sizePriceValid = true;

    sizePriceRaw.split(",").forEach(pair => {
      const [size, price] = pair.split(":").map(v => v.trim());
      if (!size || isNaN(price)) {
        sizePriceValid = false;
      } else {
        sizePriceMap[size] = parseFloat(price);
      }
    });

    // üñºÔ∏è –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    const imageFiles = document.getElementById("productImages").files;
    const imageURLs = [];

    for (let i = 0; i < imageFiles.length; i++) {
      const file = imageFiles[i];
      const path = `products/temp/${Date.now()}_${file.name}`;
      const url = await uploadImage(file, path);
      imageURLs.push(url);
    }

    // ‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (
      !name || isNaN(base) ||
      isNaN(size80) || isNaN(size100) || isNaN(size120) ||
      isNaN(plastic1) || isNaN(plastic2) || isNaN(plastic3) ||
      imageURLs.length === 0 || !sizePriceValid || Object.keys(sizePriceMap).length === 0
    ) {
      alert("‚ö†Ô∏è –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ, –≤–∫–ª—é—á–∞—é—á–∏ —Ü—ñ–Ω–∏ –ø–æ —Ä–æ–∑–º—ñ—Ä—É —Ç–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è");
      return;
    }

    const productData = {
      name,
      base,
      size80,
      size100,
      size120,
      plastic1,
      plastic2,
      plastic3,
      tags,
      images: imageURLs,
      feature,
      sizePriceMap,
      createdAt: new Date().toISOString()
    };

    try {
      const docRef = await firebase.firestore().collection("products").add(productData);
      alert(`‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –∑ ID: ${docRef.id}`);
      form.reset();
    } catch (err) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É:", err);
      alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    }
  });
}

// üìÑ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∑–∞–º–æ–≤–ª–µ–Ω—å
  // üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å –∑ Firestore
  function showOrderList() {
  const container = document.getElementById("adminContent");
  container.innerHTML = `
    <h3>üìÑ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3>
    <table id="ordersTable">
      <thead>
        <tr>
          <th>–î–∞—Ç–∞/—á–∞—Å</th>
          <th>–§–æ—Ç–æ</th>
          <th>–¢–æ–≤–∞—Ä</th>
          <th>–ü–∞—Ä–∞–º–µ—Ç—Ä–∏</th>
          <th>–ö—ñ–ª—å–∫—ñ—Å—Ç—å</th>
          <th>–¶—ñ–Ω–∞</th>
          <th>–°—É–º–∞</th>
          <th>–û—Ç—Ä–∏–º—É–≤–∞—á</th>
          <th>–î–æ—Å—Ç–∞–≤–∫–∞</th>
          <th>–û–ø–ª–∞—Ç–∞</th>
          <th>–°—Ç–∞—Ç—É—Å</th>
          <th>–î—ñ—ó</th>
        </tr>
      </thead>
      <tbody id="ordersBody"></tbody>
    </table>
  `;

  firebase.firestore().collection("orders").orderBy("timestamp", "desc").get().then(snapshot => {
    const tbody = document.getElementById("ordersBody");

    snapshot.forEach(doc => {
      const data = doc.data();
      const orderId = doc.id;
      const createdAt = data.timestamp ? new Date(data.timestamp) : null;
      const formattedDate = createdAt
        ? createdAt.toLocaleString("uk-UA", { dateStyle: "short", timeStyle: "short" })
        : "‚Äî";

      if (!Array.isArray(data.items)) {
        console.warn(`‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±–µ–∑ items: ${orderId}`);
        return;
      }

      data.items.forEach((item, index) => {
        const row = document.createElement("tr");

        row.innerHTML = `
          <td>${index === 0 ? formattedDate : ""}</td>
          <td>${index === 0 ? orderId : ""}</td>
          <td>
            ${item.photo
              ? `<img src="${item.photo}" width="40">`
              : data.fileURL
                ? `<a href="${data.fileURL}" download="${data.fileName}">‚¨áÔ∏è ${data.fileName}</a>`
                : "‚Äî"}
          </td>
          <td>${item.name || "‚Äî"}</td>
          <td>${item.size ? `${item.size}–º–º` : "‚Äî"}, –ø–ª–∞—Å—Ç–∏–∫ ${item.material || "‚Äî"}</td>
          <td>${item.quantity ?? "‚Äî"}</td>
          <td>${item.price ? `${item.price} –≥—Ä–Ω` : "‚Äî"}</td>
          <td>${item.price && item.quantity ? `${item.price * item.quantity} –≥—Ä–Ω` : "‚Äî"}</td>
          <td>${data.customer?.fullName || "‚Äî"}<br>${data.customer?.phone || "‚Äî"}</td>
          <td>${data.delivery?.service || "‚Äî"}<br>${data.delivery?.city || "‚Äî"}, ‚Ññ${data.delivery?.branch || "‚Äî"}</td>
          <td>${item.payment || data.payment || "‚Äî"}</td>
          <td>
            <select onchange="updateStatus('${orderId}', this.value)">
              ${[
                "–û—á—ñ–∫—É—î –æ–ø–ª–∞—Ç—É", "–û–ø–ª–∞—á–µ–Ω–æ", "–ì–æ—Ç—É—î—Ç—å—Å—è", "–î—Ä—É–∫—É—î—Ç—å—Å—è",
                "–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ", "–ó–∞–≤–µ—Ä—à–µ–Ω–æ", "–°–∫–∞—Å–æ–≤–∞–Ω–æ"
              ].map(s => `<option value="${s}" ${s === item.status ? "selected" : ""}>${s}</option>`).join("")}
            </select>
          </td>
          <td><button onclick="copyOrder('${orderId}')">üìã</button></td>
        `;
        tbody.appendChild(row);
      });
    });
  });
}
// ‚úÖ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç showOrderList


// üîß –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
function updateStatus(orderId, newStatus) {
  firebase.firestore().collection("orders").doc(orderId).update({ status: newStatus })
    .then(() => showToast("‚úÖ –°—Ç–∞—Ç—É—Å –æ–Ω–æ–≤–ª–µ–Ω–æ"))
    .catch(err => showToast("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É"));
}

// üìã –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
function copyOrder(orderId) {
  navigator.clipboard.writeText(orderId)
    .then(() => showToast(`üìã –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ: ${orderId}`))
    .catch(() => showToast("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏"));
}

async function uploadImage(file, path) {
  const storageRef = firebase.storage().ref(path);
  await storageRef.put(file);
  return await storageRef.getDownloadURL();
}
