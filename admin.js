// admin.js ‚Äî –ß–∞—Å—Ç—å 1

// üß≠ –ü–µ—Ä–µ–º–∏–∫–∞—á –≤–∫–ª–∞–¥–æ–∫ –∞–¥–º—ñ–Ω–∫–∏
document.getElementById("navAdd")?.addEventListener("click", showAddProductForm);
document.getElementById("navList")?.addEventListener("click", showProductList);
document.getElementById("navOrders")?.addEventListener("click", showOrderList);

// üßæ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
function generateAddProductForm() {
  return `
    <h3>‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä</h3>
    <form id="productForm">
      <div class="form-group">
        <label>–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É</label>
        <input type="text" id="productName" required>
      </div>

      <div class="form-group">
        <label>–ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞</label>
        <input type="number" id="basePrice" required>
      </div>

      <div class="form-group">
        <label>–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ —Ä–æ–∑–º—ñ—Ä—É (80, 100, 120)</label>
        <input type="number" id="size80" placeholder="80–º–º" required>
        <input type="number" id="size100" placeholder="100–º–º" required>
        <input type="number" id="size120" placeholder="120–º–º" required>
      </div>

      <div class="form-group">
        <label>–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –ø–ª–∞—Å—Ç–∏–∫—É (1, 2, 3)</label>
        <input type="number" id="plastic1" placeholder="–û–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π" required>
        <input type="number" id="plastic2" placeholder="–î–≤–æ–∫–æ–ª—ñ—Ä–Ω–∏–π" required>
        <input type="number" id="plastic3" placeholder="–¢—Ä–∏–∫–æ–ª—ñ—Ä–Ω–∏–π" required>
      </div>

      <div class="form-group">
        <label>–¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É)</label>
        <input type="text" id="tagsInput" placeholder="labubu, cat, set">
      </div>

      <div class="form-group">
        <label>–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å (—É–Ω—ñ–∫–∞–ª—å–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å)</label>
        <input type="text" id="featureInput" placeholder="—Å–≤—ñ—Ç–∏—Ç—å—Å—è –≤ —Ç–µ–º—Ä—è–≤—ñ, —Ä—É—Ö–æ–º—ñ —á–∞—Å—Ç–∏–Ω–∏...">
      </div>

      <div class="form-group">
        <label>–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è (URL —á–µ—Ä–µ–∑ –∫–æ–º—É)</label>
        <textarea id="imagesInput" rows="3" placeholder="https://..."></textarea>
      </div>

      <button type="submit">üì§ –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä</button>
    </form>
  `;
}
// üßæ –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
function setupProductFormHandler() {
  const form = document.getElementById("productForm");
  if (!form) return;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const name = document.getElementById("productName").value.trim();
    const base = parseFloat(document.getElementById("basePrice").value);
    const size80 = parseFloat(document.getElementById("size80").value);
    const size100 = parseFloat(document.getElementById("size100").value);
    const size120 = parseFloat(document.getElementById("size120").value);
    const plastic1 = parseFloat(document.getElementById("plastic1").value);
    const plastic2 = parseFloat(document.getElementById("plastic2").value);
    const plastic3 = parseFloat(document.getElementById("plastic3").value);
    const tags = document.getElementById("tagsInput").value.trim().split(",").map(t => t.trim());
    const images = document.getElementById("imagesInput").value.trim().split(",").map(url => url.trim());
    const feature = document.getElementById("featureInput").value.trim(); // ‚Üê –≤–æ—Ç —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞


    // ‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (!name || !base || !size80 || !size100 || !size120 || !plastic1 || !plastic2 || !plastic3 || images.length === 0) {
      alert("‚ö†Ô∏è –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ");
      return;
    }

    const productData = {
      name,
      base,
      size80,
      size100,
      size120,
      plastic1,
      plastic2,
      plastic3,
      tags,
      images,
      feature,
      createdAt: new Date().toISOString()
    };

    try {
      const docRef = await firebase.firestore().collection("products").add(productData);
      alert(`‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –∑ ID: ${docRef.id}`);
      form.reset();
    } catch (err) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É:", err);
      alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    }
  });
}
