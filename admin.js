export function showAddProductForm() {
  const container = document.getElementById("adminContent");
  container.innerHTML = generateAddProductForm();

  // ‚è≥ –ñ–¥—ë–º, –ø–æ–∫–∞ DOM —Ç–æ—á–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—Å—è
  requestAnimationFrame(() => {
    const form = document.getElementById("productForm");
    if (form) {
      setupProductFormHandler();
    } else {
      console.warn("‚ö†Ô∏è –§–æ—Ä–º–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –ø—ñ—Å–ª—è –≤—Å—Ç–∞–≤–∫–∏.");
    }
  });
}


document.getElementById("orderForm").addEventListener("submit", function(e) {
  e.preventDefault();
  alert("–ó–∞—è–≤–∫–∞ –Ω–∞ –¥—Ä—É–∫ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞! –ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏.");
});

export function showOrderList() {
  const container = document.getElementById("adminContent");
  container.innerHTML = `
    <h2>üì® –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</h2>
    <p>–¢—É—Ç –±—É–¥–µ —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫...</p>
  `;
}


function filterProducts() {
  const input = document.getElementById("searchInput").value.toLowerCase();
  const cards = document.querySelectorAll("#ready-products .product-card");

  cards.forEach(card => {
    const title = card.querySelector("h3").textContent.toLowerCase();
    const tags = card.querySelector(".tags")?.textContent.toLowerCase() || "";
    const match = title.includes(input) || tags.includes(input);
    card.style.display = match ? "block" : "none";
  });
}
// == üß± –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ == //
export function generateAddProductForm() {
  return `
    <form id="productForm">
      <h2>‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä</h2>

      <!-- üìõ –ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É -->
      <label>üìõ –ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É:</label>
      <input type="text" id="productName" required>

      <!-- üìÑ –û–ø–∏—Å -->
      <label>üìÑ –û–ø–∏—Å:</label>
      <input type="text" id="productDescription">

      <!-- ‚ú® –û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å -->
      <label>‚ú® –û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:</label>
      <input type="text" id="productFeature">

      <!-- üí∞ –ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ -->
      <label>üí∞ –ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ (–≥—Ä–Ω):</label>
      <input type="number" id="basePrice" required>

      <!-- üìè –†–æ–∑–º—ñ—Ä–∏ -->
      <label>üìè –†–æ–∑–º—ñ—Ä–∏ (–∫–æ–µ—Ñ.):</label>
      <input type="number" id="size80" placeholder="80 –º–º">
      <input type="number" id="size100" placeholder="100 –º–º">
      <input type="number" id="size120" placeholder="120 –º–º">

      <!-- üé® –¢–∏–ø–∏ –ø–ª–∞—Å—Ç–∏–∫—É -->
      <label>üé® –¢–∏–ø–∏ –ø–ª–∞—Å—Ç–∏–∫—É (–∫–æ–µ—Ñ.):</label>
      <input type="number" id="plastic1" placeholder="–û–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π">
      <input type="number" id="plastic2" placeholder="–î–≤–æ–∫–æ–ª—ñ—Ä–Ω–∏–π">
      <input type="number" id="plastic3" placeholder="–¢—Ä–∏–∫–æ–ª—ñ—Ä–Ω–∏–π">

      <!-- üè∑Ô∏è –¢–µ–≥–∏ -->
      <label>üè∑Ô∏è –¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª):</label>
      <input type="text" id="productTags" placeholder="labubu glow —Ä—É—á–Ω–∞ —Ä–æ–±–æ—Ç–∞">

      <!-- üñºÔ∏è –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è -->
      <label>üñºÔ∏è –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É:</label>
      <div id="imageInputs">
        <input type="text" class="image-url" placeholder="img/example.jpg">
      </div>
      <button type="button" onclick="addImageInput()">‚ûï –î–æ–¥–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</button>

      <!-- üìä –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω—ñ —Ü—ñ–Ω–∏ -->
      <label>üìä –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω—ñ —Ü—ñ–Ω–∏ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó:</label>
      <textarea id="manualPrices" rows="4" placeholder="80–º–º + –æ–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π = 150 –≥—Ä–Ω"></textarea>

      <!-- üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ -->
      <button type="submit">üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ —Ç–æ–≤–∞—Ä</button>
    </form>
  `;
}

// == üñºÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π == //
export function addImageInput() {
  const container = document.getElementById("imageInputs");
  const input = document.createElement("input");
  input.type = "text";
  input.className = "image-url";
  input.placeholder = "img/example.jpg";
  container.appendChild(input);
}

// == üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ == //
export function setupProductFormHandler() {
  const form = document.getElementById("productForm");
  if (!form) {
    console.warn("‚ö†Ô∏è –§–æ—Ä–º–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ ‚Äî setupProductFormHandler –Ω–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è.");
    return;
  }

  form.addEventListener("submit", function (e) {
    e.preventDefault();

    // üß± –°—á–∏—Ç—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
    const data = {
      name: form.querySelector("#productName").value.trim(),
      description: form.querySelector("#productDescription").value.trim(),
      feature: form.querySelector("#productFeature").value.trim(),
      basePrice: parseFloat(form.querySelector("#basePrice").value),
      size80: parseFloat(form.querySelector("#size80").value) || "",
      size100: parseFloat(form.querySelector("#size100").value) || "",
      size120: parseFloat(form.querySelector("#size120").value) || "",
      plastic1: parseFloat(form.querySelector("#plastic1").value) || "",
      plastic2: parseFloat(form.querySelector("#plastic2").value) || "",
      plastic3: parseFloat(form.querySelector("#plastic3").value) || "",
      tags: form.querySelector("#productTags").value.trim().split(" "),
      images: Array.from(form.querySelectorAll(".image-url"))
        .map(input => input.value.trim())
        .filter(src => src !== ""),
      manualPrices: form.querySelector("#manualPrices").value.trim()
    };

    // üß© –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞)
    const cardHTML = `<div class="product-card">
      <h3>${data.name}</h3>
      <p>${data.description}</p>
      <p><strong>–¶—ñ–Ω–∞:</strong> ${data.basePrice} –≥—Ä–Ω</p>
      <p><strong>–¢–µ–≥–∏:</strong> ${data.tags.join(", ")}</p>
    </div>`;

    // üóÇÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä)
    const grid = document.getElementById("productGrid");
    if (grid) {
      grid.insertAdjacentHTML("beforeend", cardHTML);
    }

    alert("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ!");
    form.reset(); // üîÑ –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
  });
}